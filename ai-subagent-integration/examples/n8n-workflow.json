{
  "name": "AI Subagent Router",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "ai-subagent",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-trigger",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [250, 300]
    },
    {
      "parameters": {
        "rules": {
          "rules": [
            {
              "conditions": {
                "conditions": [
                  {
                    "leftValue": "={{ $json.task_type }}",
                    "rightValue": "simple",
                    "operation": "equals"
                  }
                ]
              },
              "renameOutput": "GPT-4o Mini"
            },
            {
              "conditions": {
                "conditions": [
                  {
                    "leftValue": "={{ $json.task_type }}",
                    "rightValue": "analysis",
                    "operation": "equals"
                  }
                ]
              },
              "renameOutput": "Gemini"
            }
          ]
        },
        "options": {
          "fallbackOutput": "GPT-4o Mini"
        }
      },
      "id": "router",
      "name": "Task Router",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [450, 300]
    },
    {
      "parameters": {
        "model": "gpt-4o-mini",
        "messages": {
          "values": [
            {
              "content": "={{ $json.query }}"
            }
          ]
        },
        "options": {
          "maxTokens": 500,
          "temperature": 0.7
        }
      },
      "id": "openai-node",
      "name": "OpenAI GPT-4o Mini",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.5,
      "position": [650, 200]
    },
    {
      "parameters": {
        "model": "gemini-1.5-flash",
        "prompt": "={{ $json.query }}",
        "options": {
          "temperature": 0.7,
          "maxOutputTokens": 500
        }
      },
      "id": "gemini-node",
      "name": "Google Gemini",
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [650, 400]
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ JSON.stringify({ success: true, model: $node.name, response: $json.text || $json.content, timestamp: new Date().toISOString(), tokens_used: $json.usage?.total_tokens || 'N/A' }) }}",
        "options": {}
      },
      "id": "format-response",
      "name": "Format Response",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [850, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}",
        "options": {
          "responseCode": 200,
          "responseHeaders": {
            "entries": [
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ]
          }
        }
      },
      "id": "respond",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [1050, 300]
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Task Router",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Task Router": {
      "main": [
        [
          {
            "node": "OpenAI GPT-4o Mini",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Google Gemini",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI GPT-4o Mini": {
      "main": [
        [
          {
            "node": "Format Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini": {
      "main": [
        [
          {
            "node": "Format Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Response": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "1.0.0",
  "triggerCount": 1
}